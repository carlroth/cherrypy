language: python
python:
- 2.6
- 2.7
- 3.2
- 3.3
- 3.4
- 3.5
- 3.6-dev
- pypy
- pypy3
- nightly

matrix:
  fast_finish: true
  allow_failures:
    # TODO: check what causes testing stuck
    - python: pypy
    # TODO: fix tests
    - python: pypy3
    - python: 3.5
      env: RUN_LINTS=true
  include:
    - python: 3.5
      env: RUN_LINTS=true
    - os: osx
      language: generic
      python: 2.6
      env: TRAVIS_PYTHON_VERSION=2.6
      sudo: true
    - os: osx
      language: generic
      python: 2.7
      env: TRAVIS_PYTHON_VERSION=2.7
      sudo: true
    - os: osx
      language: generic
      python: 3.2
      env: TRAVIS_PYTHON_VERSION=3.2
      sudo: true
    - os: osx
      language: generic
      python: 3.3
      env: TRAVIS_PYTHON_VERSION=3.3
      sudo: true
    - os: osx
      language: generic
      python: 3.4
      env: TRAVIS_PYTHON_VERSION=3.4
      sudo: true
    - os: osx
      language: generic
      python: 3.5
      env: TRAVIS_PYTHON_VERSION=3.5
      sudo: true
    - os: osx
      language: generic
      python: 3.6-dev
      env: TRAVIS_PYTHON_VERSION=3.6
      sudo: true
    - os: osx
      language: generic
      python: nightly
      env: TRAVIS_PYTHON_VERSION=nightly
      sudo: true
    - os: osx
      language: generic
      python: 3.5
      env:
        - TRAVIS_PYTHON_VERSION=3.5
        - RUN_LINTS=true
      sudo: true


cache: pip

env:
- WEBTEST_INTERACTIVE=false

os: linux

before_install:
- git clone --recursive -j4 git://github.com/MacPython/terryfy
- source terryfy/multibuild/common_utils.sh
- source terryfy/multibuild/travis_steps.sh
- before_install
- |
  if [ "$TRAVIS_OS_NAME" = "osx" ]
  then
    #brew update
    #brew install python3
    echo '$TRAVIS_PYTHON_VERSION' $TRAVIS_PYTHON_VERSION;
    #bash -c "source terryfy/travis_tools.sh; get_python_environment macpython '"${TRAVIS_PYTHON_VERSION}"'; python --version; pyenv activate '"$TRAVIS_PYTHON_VERSION"'"
    python --version
  fi
- |
  if [ "$RUN_LINTS" = "true" ]
  then
    pip install pre-commit
  fi
- env


install: if [ "$RUN_LINTS" != "true" ]; then pip install -U nose; pip install -e .[test_tools,routes_dispatcher]; fi
script: if [ "$RUN_LINTS" = "true" ]; then pre-commit run --all-files; else nosetests; fi

deploy:
  provider: pypi
  on:
    tags: true
    os: linux
    python: 3.5
  user: jaraco
  password:
    secure: CQqUvtssQ4wmRluPcxh6m5lIXi83Qu9dAFAvZLS/+AQNIG78XECXv5xFTEdGSLX9yncKDpDKI3xRJeCKyO4OJUN0t6W1MRycY72+R63i9e9wPjfvtRqYH1TBT+no7jj/DHqXIrWSlpjRNAt4XXeSv7OzKWT4PmTNkNQSKyS1DWCmZGlbCKlV774Z9PbrfltflxL0V6DiX6ZfoY1THBO4rIopjMk/MPLgS5zvwLgXVbT9sK/DcPOgOq47iSLCs0oScbwiFzYW4DbcVZrBMv4ALtQTjk6ZEaBQ7KtKgsyxgi/ToVhjRxYg4rwvhjsyjixUdECLUqL3WgWfzW/lo82lhb79ERwhnjf1DvPNexlXhv9hHwHsFROpaOmM0nyDJsJg0rCNPVfO4SpBHEnd/ujlHO6yorHj0S54jZWqqDwD5gN19v3hEMT48Pc8uvazE9K1kMQbNXEzqn+SJjVB+DG7qK5Jm9Kk7ZC4R88hJAJNsR+SlFCXMGzkS9WUefUGLHQFfezZk43sMPIXMnh9d2XqCQo4QpUawdg3pwaTukFfyaHlK39CIHhZNas5D/UFL5spQPAAkH1IMcPILiSUwYYnXIJFWJIiulfEQalJroAQjrzvst/NVB8BbeYuCfmVLVOZw8Y6GOYONGgiXjT3nfmw/dN+uw+GY3EgAV5jl+fa434=
  distributions: release
